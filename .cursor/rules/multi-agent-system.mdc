# Multi-Agent System Specific Rules

## CrewAI Multi-Agent System

- Understand the sequential process flow and dependencies
- Be aware of context passing limitations between agents
- Test individual agents before full crew execution
- Monitor resource usage across all agents
- Plan for variable execution times

## Agent Design Principles

- Design agents with clear, non-overlapping responsibilities
- Define task dependencies explicitly
- Use structured output formats for agent communication
- Implement proper context passing between tasks
- Monitor and log agent interactions for debugging

## Tool Integration

- Validate tool schemas match expected inputs/outputs
- Test plotting tools with sample data first
- Ensure PDF generation has all required dependencies
- Verify web scraping tools respect rate limits
- Handle tool failures gracefully without breaking the entire workflow

## Agent Communication Patterns

- Use consistent message formats between agents
- Implement proper error propagation
- Handle partial failures gracefully
- Maintain context across agent boundaries
- Log all inter-agent communications for debugging

## Resource Management

- Monitor memory usage across all agents
- Implement proper cleanup after agent execution
- Handle long-running tasks with timeouts
- Manage API rate limits across multiple agents
- Implement retry logic for failed agent tasks

## Testing Multi-Agent Systems

- Test each agent in isolation first
- Validate data flow between agents
- Test error scenarios and recovery
- Monitor performance bottlenecks
- Implement comprehensive logging for debugging
description:
globs:
alwaysApply: false
---

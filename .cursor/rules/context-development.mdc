# Context and Development Rules

## Always Provide Context

**Rule #1:** When asking for help or code review, always include relevant context
**Rule #2:** Specify which part of the multi-agent system you're working on
**Rule #3:** Include error messages, stack traces, and specific symptoms
**Rule #4:** Mention the current state of execution (which cell, which agent)
**Rule #5:** Provide sample data or inputs when debugging data processing issues

## Documentation Standards

- Comment complex logic, especially in agent definitions and task descriptions
- Use docstrings for custom tools and functions
- Maintain a README with setup instructions and project overview
- Document API requirements and rate limits
- Keep track of model requirements and resource usage

## Context Template

When reporting issues or requesting help, include:

```
**Current Task:** [What you're trying to accomplish]
**Agent/Component:** [Which part of the system]
**Error/Issue:** [Specific problem description]
**Code Context:** [Relevant code snippet]
**Expected vs Actual:** [What should happen vs what's happening]
**Environment:** [Colab runtime type, Python version, etc.]
```

## Communication Best Practices

- Be specific about which agent or task is failing
- Include the exact error message and stack trace
- Mention the data being processed when relevant
- Specify the execution step or cell number
- Provide minimal reproducible examples
description:
globs:
alwaysApply: false
---
